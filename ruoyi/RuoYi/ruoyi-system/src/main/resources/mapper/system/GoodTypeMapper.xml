<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.GoodTypeMapper">
    
    <resultMap type="GoodType" id="GoodTypeResult">
        <result property="goodId"    column="good_id"    />
        <result property="goodCode"    column="good_code"    />
        <result property="goodName"    column="good_name"    />
    </resultMap>

    <sql id="selectGoodTypeVo">
        select good_id, good_code, good_name from good_type
    </sql>

    <select id="selectGoodTypeList" parameterType="GoodType" resultMap="GoodTypeResult">
        <include refid="selectGoodTypeVo"/>
        <where>  
            <if test="goodCode != null  and goodCode != ''"> and good_code = #{goodCode}</if>
            <if test="goodName != null  and goodName != ''"> and good_name like concat('%', #{goodName}, '%')</if>
        </where>
    </select>
    
    <select id="selectGoodTypeById" parameterType="Long" resultMap="GoodTypeResult">
        <include refid="selectGoodTypeVo"/>
        where good_id = #{goodId}
    </select>
        
    <insert id="insertGoodType" parameterType="GoodType" useGeneratedKeys="true" keyProperty="goodId">
        insert into good_type
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="goodCode != null and goodCode != ''">good_code,</if>
            <if test="goodName != null and goodName != ''">good_name,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="goodCode != null and goodCode != ''">#{goodCode},</if>
            <if test="goodName != null and goodName != ''">#{goodName},</if>
         </trim>
    </insert>

    <update id="updateGoodType" parameterType="GoodType">
        update good_type
        <trim prefix="SET" suffixOverrides=",">
            <if test="goodCode != null and goodCode != ''">good_code = #{goodCode},</if>
            <if test="goodName != null and goodName != ''">good_name = #{goodName},</if>
        </trim>
        where good_id = #{goodId}
    </update>

    <delete id="deleteGoodTypeById" parameterType="Long">
        delete from good_type where good_id = #{goodId}
    </delete>

    <delete id="deleteGoodTypeByIds" parameterType="String">
        delete from good_type where good_id in 
        <foreach item="goodId" collection="array" open="(" separator="," close=")">
            #{goodId}
        </foreach>
    </delete>

    <select id="checkGoodTypeCodeUnique" parameterType="String" resultMap="GoodTypeResult">
        <include refid="selectGoodTypeVo"/>
        where good_code=#{goodCode} limit 1
    </select>

    <select id="checkGoodNameUnique" parameterType="String" resultMap="GoodTypeResult">
        <include refid="selectGoodTypeVo"/>
        where good_name=#{goodName} limit 1
    </select>

</mapper>